==118450== Memcheck, a memory error detector
==118450== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==118450== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==118450== Command: ./so_long maps/map_1.ber
==118450== Parent PID: 70817
==118450== 
==118450== Use of uninitialised value of size 8
==118450==    at 0x10FDBF: ft_parsing (in /mnt/nfs/homes/ggosse/42/cursus/so_long/so_long)
==118450==    by 0x10FF5B: main (in /mnt/nfs/homes/ggosse/42/cursus/so_long/so_long)
==118450== 
==118450== Invalid write of size 4
==118450==    at 0x10FDBF: ft_parsing (in /mnt/nfs/homes/ggosse/42/cursus/so_long/so_long)
==118450==    by 0x10FF5B: main (in /mnt/nfs/homes/ggosse/42/cursus/so_long/so_long)
==118450==  Address 0x24 is not stack'd, malloc'd or (recently) free'd
==118450== 
==118450== 
==118450== Process terminating with default action of signal 11 (SIGSEGV)
==118450==  Access not within mapped region at address 0x24
==118450==    at 0x10FDBF: ft_parsing (in /mnt/nfs/homes/ggosse/42/cursus/so_long/so_long)
==118450==    by 0x10FF5B: main (in /mnt/nfs/homes/ggosse/42/cursus/so_long/so_long)
==118450==  If you believe this happened as a result of a stack
==118450==  overflow in your program's main thread (unlikely but
==118450==  possible), you can try to increase the size of the
==118450==  main thread stack using the --main-stacksize= flag.
==118450==  The main thread stack size used in this run was 8388608.
==118450== 
==118450== HEAP SUMMARY:
==118450==     in use at exit: 0 bytes in 0 blocks
==118450==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==118450== 
==118450== All heap blocks were freed -- no leaks are possible
==118450== 
==118450== Use --track-origins=yes to see where uninitialised values come from
==118450== For lists of detected and suppressed errors, rerun with: -s
==118450== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)

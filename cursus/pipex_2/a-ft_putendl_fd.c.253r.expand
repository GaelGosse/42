
;; Function ft_putendl_fd (ft_putendl_fd, funcdef_no=6, decl_uid=3887, cgraph_uid=7, symbol_order=6)

Partition 0: size 4 align 4
	i_5

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 7 into block 6...
Merged blocks 6 and 7.
Merged 6 and 7 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 s+0 S8 A64])
        (reg:DI 5 di [ s ])) "libft/ft_putendl_fd.c":16:1 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [1 fd+0 S4 A32])
        (reg:SI 4 si [ fd ])) "libft/ft_putendl_fd.c":16:1 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 0 [0])) "libft/ft_putendl_fd.c":19:4 -1
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (label_ref 12)) "libft/ft_putendl_fd.c":20:8 -1
     (nil)
 -> 12)
(barrier 9 8 19)
(code_label 19 9 10 4 3 (nil) [1 uses])
(note 10 19 11 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 4 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "libft/ft_putendl_fd.c":21:4 -1
     (nil))
(code_label 12 11 13 5 2 (nil) [1 uses])
(note 13 12 14 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 5 (set (reg:SI 86)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "libft/ft_putendl_fd.c":20:10 -1
     (nil))
(insn 15 14 16 5 (set (reg:DI 82 [ _1 ])
        (sign_extend:DI (reg:SI 86))) "libft/ft_putendl_fd.c":20:10 -1
     (nil))
(insn 16 15 17 5 (set (reg/f:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 s+0 S8 A64])) "libft/ft_putendl_fd.c":20:10 -1
     (nil))
(insn 17 16 18 5 (parallel [
            (set (reg/f:DI 83 [ _2 ])
                (plus:DI (reg:DI 82 [ _1 ])
                    (reg/f:DI 87)))
            (clobber (reg:CC 17 flags))
        ]) "libft/ft_putendl_fd.c":20:10 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [2 s+0 S8 A64])
            (reg:DI 82 [ _1 ]))
        (nil)))
(insn 18 17 20 5 (set (reg:QI 84 [ _3 ])
        (mem:QI (reg/f:DI 83 [ _2 ]) [0 *_2+0 S1 A8])) "libft/ft_putendl_fd.c":20:10 -1
     (nil))
(insn 20 18 21 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 84 [ _3 ])
            (const_int 0 [0]))) "libft/ft_putendl_fd.c":20:9 -1
     (nil))
(jump_insn 21 20 22 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) "libft/ft_putendl_fd.c":20:9 -1
     (nil)
 -> 19)
(note 22 21 23 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 6 (set (reg:SI 88)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "libft/ft_putendl_fd.c":22:2 -1
     (nil))
(insn 24 23 25 6 (set (reg:DI 85 [ _4 ])
        (sign_extend:DI (reg:SI 88))) "libft/ft_putendl_fd.c":22:2 -1
     (nil))
(insn 25 24 26 6 (set (reg:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 s+0 S8 A64])) "libft/ft_putendl_fd.c":22:2 -1
     (nil))
(insn 26 25 27 6 (set (reg:SI 90)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [1 fd+0 S4 A32])) "libft/ft_putendl_fd.c":22:2 -1
     (nil))
(insn 27 26 28 6 (set (reg:DI 1 dx)
        (reg:DI 85 [ _4 ])) "libft/ft_putendl_fd.c":22:2 -1
     (nil))
(insn 28 27 29 6 (set (reg:DI 4 si)
        (reg:DI 89)) "libft/ft_putendl_fd.c":22:2 -1
     (nil))
(insn 29 28 30 6 (set (reg:SI 5 di)
        (reg:SI 90)) "libft/ft_putendl_fd.c":22:2 -1
     (nil))
(call_insn 30 29 31 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("write") [flags 0x41]  <function_decl 0x7ff1f2af0200 write>) [0 write S1 A8])
            (const_int 0 [0]))) "libft/ft_putendl_fd.c":22:2 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 31 30 32 6 (set (reg:SI 91)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [1 fd+0 S4 A32])) "libft/ft_putendl_fd.c":23:2 -1
     (nil))
(insn 32 31 33 6 (set (reg:DI 1 dx)
        (const_int 1 [0x1])) "libft/ft_putendl_fd.c":23:2 -1
     (nil))
(insn 33 32 34 6 (set (reg:DI 92)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7ff1f277b2d0 *.LC0>)) "libft/ft_putendl_fd.c":23:2 -1
     (nil))
(insn 34 33 35 6 (set (reg:DI 4 si)
        (reg:DI 92)) "libft/ft_putendl_fd.c":23:2 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7ff1f277b2d0 *.LC0>)
        (nil)))
(insn 35 34 36 6 (set (reg:SI 5 di)
        (reg:SI 91)) "libft/ft_putendl_fd.c":23:2 -1
     (nil))
(call_insn 36 35 0 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("write") [flags 0x41]  <function_decl 0x7ff1f2af0200 write>) [0 write S1 A8])
            (const_int 0 [0]))) "libft/ft_putendl_fd.c":23:2 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))


;; Function ft_isalpha (ft_isalpha, funcdef_no=0, decl_uid=1979, cgraph_uid=1, symbol_order=0)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 37.
Merging block 10 into block 9...
Merged blocks 9 and 10.
Merged 9 and 10 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 c+0 S4 A32])
        (reg:SI 5 di [ c ])) "libft/ft_isalpha.c":14:1 -1
     (nil))
(note 3 2 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 3 9 2 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 c+0 S4 A32])
            (const_int 64 [0x40]))) "libft/ft_isalpha.c":15:5 -1
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 15)
            (pc))) "libft/ft_isalpha.c":15:5 -1
     (nil)
 -> 15)
(note 10 9 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 10 14 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 c+0 S4 A32])
            (const_int 90 [0x5a]))) "libft/ft_isalpha.c":15:17 -1
     (nil))
(jump_insn 14 13 15 4 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) "libft/ft_isalpha.c":15:17 -1
     (nil)
 -> 26)
(code_label 15 14 16 5 2 (nil) [1 uses])
(note 16 15 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 16 20 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 c+0 S4 A32])
            (const_int 96 [0x60]))) "libft/ft_isalpha.c":15:31 -1
     (nil))
(jump_insn 20 19 21 5 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) "libft/ft_isalpha.c":15:31 -1
     (nil)
 -> 31)
(note 21 20 24 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 24 21 25 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 c+0 S4 A32])
            (const_int 122 [0x7a]))) "libft/ft_isalpha.c":15:45 -1
     (nil))
(jump_insn 25 24 26 6 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) "libft/ft_isalpha.c":15:45 -1
     (nil)
 -> 31)
(code_label 26 25 27 7 3 (nil) [1 uses])
(note 27 26 28 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 7 (set (reg:SI 82 [ _1 ])
        (const_int 1 [0x1])) "libft/ft_isalpha.c":17:10 -1
     (nil))
(jump_insn 29 28 30 7 (set (pc)
        (label_ref 34)) "libft/ft_isalpha.c":17:10 -1
     (nil)
 -> 34)
(barrier 30 29 31)
(code_label 31 30 32 8 4 (nil) [2 uses])
(note 32 31 33 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 8 (set (reg:SI 82 [ _1 ])
        (const_int 0 [0])) "libft/ft_isalpha.c":19:9 -1
     (nil))
(code_label 34 33 35 9 5 (nil) [1 uses])
(note 35 34 36 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 40 9 (set (reg:SI 83 [ <retval> ])
        (reg:SI 82 [ _1 ])) "libft/ft_isalpha.c":20:1 -1
     (nil))
(insn 40 36 41 9 (set (reg/i:SI 0 ax)
        (reg:SI 83 [ <retval> ])) "libft/ft_isalpha.c":20:1 -1
     (nil))
(insn 41 40 0 9 (use (reg/i:SI 0 ax)) "libft/ft_isalpha.c":20:1 -1
     (nil))

ft_abs                 function     21 ./ft_push_swap.c int ft_abs(int nbr)
ft_error               function     15 ./ft_push_swap.c void ft_error(void)
ft_free                function     28 ./ft_push_swap.c void ft_free(t_list **stack_a, t_list **stack_b)
ft_sort_all            function     41 ./ft_push_swap.c void ft_sort_all(t_list **stack_a, t_list **stack_b, int size_all)
main                   function     60 ./ft_push_swap.c int main(int argc, char **argv)
ft_is_index_lt_median  function     15 ./ft_presort.c   int ft_is_index_lt_median(t_list **lst, int quarter, int size_all)
ft_presort             function     72 ./ft_presort.c   void ft_presort(t_list **stack_a, t_list **stack_b, int size_all)
ft_presort_first       function     34 ./ft_presort.c   void ft_presort_first(t_list **stack_a, t_list **stack_b, int size_all)
ft_presort_sec         function     53 ./ft_presort.c   void ft_presort_sec(t_list **stack_a, t_list **stack_b, int size_all)
ft_sa                  function     15 ./ft_swap.c      void ft_sa(t_list **stack_a)
ft_sb                  function     35 ./ft_swap.c      void ft_sb(t_list **stack_b)
ft_ss                  function     55 ./ft_swap.c      void ft_ss(t_list **stack_a, t_list **stack_b)
ft_reverse_rotate_a    function     15 ./ft_reverse_rotate.c void ft_reverse_rotate_a(t_list **stack_a)
ft_reverse_rotate_b    function     37 ./ft_reverse_rotate.c void ft_reverse_rotate_b(t_list **stack_b)
ft_rra                 function     59 ./ft_reverse_rotate.c void ft_rra(t_list **stack_a)
ft_rrb                 function     65 ./ft_reverse_rotate.c void ft_rrb(t_list **stack_b)
ft_rrr                 function     71 ./ft_reverse_rotate.c void ft_rrr(t_list **stack_a, t_list **stack_b)
ft_atoi                function     15 ./ft_index.c     long int ft_atoi(const char *str)
ft_lstadd_back         function     56 ./ft_index.c     void ft_lstadd_back(t_list **lst, t_list *new)
ft_lstnew              function     44 ./ft_index.c     t_list *ft_lstnew(int nbr)
ft_lstsize             function     75 ./ft_index.c     int ft_lstsize(t_list *lst)
ft_ra                  function     63 ./ft_rotate.c    void ft_ra(t_list **stack_a)
ft_rb                  function     69 ./ft_rotate.c    void ft_rb(t_list **stack_b)
ft_rotate_a            function     15 ./ft_rotate.c    void ft_rotate_a(t_list **stack_a)
ft_rotate_b            function     39 ./ft_rotate.c    void ft_rotate_b(t_list **stack_b)
ft_rr                  function     75 ./ft_rotate.c    void ft_rr(t_list **stack_a, t_list **stack_b)
ft_pa                  function     29 ./ft_push.c      void ft_pa(t_list **stack_a, t_list **stack_b)
ft_pb                  function     15 ./ft_push.c      void ft_pb(t_list **stack_a, t_list **stack_b)
ft_check               function     86 ./ft_check.c     int ft_check(char **argv)
ft_check_args          function     15 ./ft_check.c     void ft_check_args(char **argv)
ft_check_dup           function     43 ./ft_check.c     void ft_check_dup(char **argv)
ft_is_sorted           function     67 ./ft_check.c     int ft_is_sorted(t_list **lst)
ft_isspace             function    108 ./ft_check.c     int ft_isspace(int chr)
ft_cost_a_b            function     40 ./ft_cost.c      void ft_cost_a_b(t_list **stack_a, t_list **stack_b)
ft_final_cost          function     69 ./ft_cost.c      void ft_final_cost(t_list **stack_a, t_list **stack_b)
ft_find_lowest_cost    function     82 ./ft_cost.c      int ft_find_lowest_cost(t_list **stack_b)
ft_target_pos          function     15 ./ft_cost.c      void ft_target_pos(t_list **stack_a, t_list **stack_b)
ft_update_cost         function    103 ./ft_cost.c      void ft_update_cost(t_list **stack_a, t_list **stack_b)
ft_index               function     50 ./ft_init_list.c void ft_index(t_list **lst)
ft_init_act_pos        function     29 ./ft_init_list.c void ft_init_act_pos(t_list **lst)
ft_init_act_pos_both   function     44 ./ft_init_list.c void ft_init_act_pos_both(t_list **stack_a, t_list **stack_b)
ft_init_list           function     15 ./ft_init_list.c void ft_init_list(t_list **stack_a, char **argv)
ft_exec_cost_a         function     66 ./ft_sort.c      void ft_exec_cost_a(t_list **stack_a, t_list **stack_b, t_list *tmp_b)
ft_exec_cost_b         function     48 ./ft_sort.c      void ft_exec_cost_b(t_list **stack_a, t_list **stack_b, t_list *tmp_b)
ft_re_organize         function     85 ./ft_sort.c      void ft_re_organize(t_list **stack_a, int size_all)
ft_sort                function     15 ./ft_sort.c      void ft_sort(int argc, t_list **stack_a, t_list **stack_b)
ft_sort_three          function     37 ./ft_sort.c      void ft_sort_three(t_list **stack_a)
ft_presort_small_first function     15 ./ft_presort_small.c void ft_presort_small_first(t_list **stack_a, t_list **stack_b, int size_all)
ft_presort_small_sec   function     35 ./ft_presort_small.c void ft_presort_small_sec(t_list **stack_a, t_list **stack_b, int size_all)
